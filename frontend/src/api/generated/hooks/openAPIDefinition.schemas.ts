/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
export interface TransactionRequest {
  /** @minimum 0.01 */
  amount: number;
  description?: string;
  transactionDate: string;
  categoryId: string;
}

export type TransactionResponseCategoryType =
  (typeof TransactionResponseCategoryType)[keyof typeof TransactionResponseCategoryType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TransactionResponseCategoryType = {
  INCOME: "INCOME",
  EXPENSE: "EXPENSE",
} as const;

export interface TransactionResponse {
  id?: string;
  amount?: number;
  description?: string;
  transactionDate?: string;
  categoryId?: string;
  categoryName?: string;
  categoryType?: TransactionResponseCategoryType;
}

export interface TransactionTemplateRequest {
  name: string;
  /** @minimum 0.01 */
  amount?: number;
  description?: string;
  categoryId: string;
}

export interface TransactionTemplateResponse {
  id?: string;
  name?: string;
  amount?: number;
  description?: string;
  categoryId?: string;
  categoryName?: string;
}

export interface RecurringTransactionRequest {
  name: string;
  /** @minimum 0.01 */
  amount: number;
  description?: string;
  startDate: string;
  endDate?: string;
  scheduleType: string;
  categoryId: string;
}

export interface RecurringTransactionResponse {
  id?: string;
  name?: string;
  amount?: number;
  description?: string;
  startDate?: string;
  endDate?: string;
  nextExecutionDate?: string;
  scheduleType?: string;
  categoryId?: string;
  categoryName?: string;
  active?: boolean;
}

export interface UpdateProfileRequest {
  firstName: string;
  lastName: string;
  email: string;
  phoneNumber: string;
  dateFormat?: string;
}

export interface CountryDto {
  id?: number;
  name?: string;
  alpha2Code?: string;
  alpha3Code?: string;
  callingCode?: string;
  flagUrl?: string;
  currencyCode?: string;
  currencyName?: string;
  currencySymbol?: string;
}

export interface UserProfileResponse {
  id?: string;
  username?: string;
  email?: string;
  firstName?: string;
  lastName?: string;
  phoneNumber?: string;
  dateFormat?: string;
  country?: CountryDto;
}

export interface CategoryRequest {
  name: string;
  description?: string;
  categoryType: string;
  /** @pattern ^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$ */
  color?: string;
}

export interface CategoryResponse {
  id?: string;
  name?: string;
  description?: string;
  categoryType?: string;
  color?: string;
}

export interface BudgetRequest {
  categoryId: string;
  /** @pattern ^\d{4}-(0[1-9]|1[0-2])$ */
  budgetMonth: string;
  /** @minimum 0.01 */
  budgetAmount: number;
  autoRenew: boolean;
}

export interface BudgetResponse {
  id?: string;
  budgetMonth?: string;
  budgetAmount?: number;
  autoRenew?: boolean;
  categoryId?: string;
  categoryName?: string;
}

export interface ReceiptResponse {
  id?: string;
  originalFileName?: string;
  fileUrl?: string;
  fileSize?: number;
  mimeType?: string;
  uploadedAt?: string;
}

export interface CreateTransactionFromTemplateRequest {
  /** @minimum 0.01 */
  amount?: number;
}

export interface ChangePasswordRequest {
  currentPassword: string;
  /**
   * @minLength 8
   * @maxLength 2147483647
   */
  newPassword: string;
  confirmationPassword: string;
}

export interface VerificationRequest {
  identifier: string;
  token: string;
}

export interface AuthenticationResponse {
  access_token?: string;
  refresh_token?: string;
}

export interface ResendVerificationRequest {
  identifier: string;
}

export interface RegisterRequest {
  username: string;
  email: string;
  /**
   * @minLength 8
   * @maxLength 2147483647
   */
  password: string;
  firstName: string;
  lastName: string;
  phoneNumber: string;
  countryId: number;
}

export interface AuthenticationRequest {
  loginIdentifier: string;
  /**
   * @minLength 8
   * @maxLength 2147483647
   */
  password: string;
}

export interface UpdateRecurringStatusRequest {
  isActive: boolean;
}

export interface NotificationResponse {
  id?: string;
  message?: string;
  createdAt?: string;
  read?: boolean;
}

export interface BudgetProgress {
  budgetId?: string;
  categoryId?: string;
  categoryName?: string;
  amountSpent?: number;
  budgetAmount?: number;
  amountRemaining?: number;
}

export interface CategorySpending {
  categoryName?: string;
  totalAmount?: number;
}

export interface DailySpending {
  date?: string;
  totalAmount?: number;
}

export interface DashboardStatsResponse {
  totalIncome?: number;
  totalExpense?: number;
  netSavings?: number;
  expenseBreakdown?: CategorySpending[];
  spendingTrend?: DailySpending[];
  budgetProgress?: BudgetProgress[];
  previousPeriodExpense?: number;
  biggestExpense?: TopTransaction;
}

export interface TopTransaction {
  transactionId?: string;
  description?: string;
  amount?: number;
  transactionDate?: string;
}

export type GetTransactionsParams = {
  startDate?: string;
  endDate?: string;
};

export type UploadReceiptBody = {
  file: Blob;
};

export type GetBudgetsParams = {
  year?: number;
  month?: number;
};

export type ExportTransactionsToCsvParams = {
  startDate?: string;
  endDate?: string;
};

export type GetDashboardStatsParams = {
  startDate?: string;
  endDate?: string;
};
